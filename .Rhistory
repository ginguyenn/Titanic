install.packages("shiny")
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Hello Shiny!"),
# Sidebar with a slider input for the number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
library(shiny)
library(shiny)
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel("Hello World!"),
# Sidebar with a slider input for the number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 5,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
))
install.packages("shiny")
install.packages("shiny")
shiny::runApp('C:/Users/gingu/AppData/Local/Temp/Temp1_Covid_analyzer_Gruppe_M.zip')
pacman::p_load("shiny")
pacman::p_load("shiny")
pie(table(Cars93$Type))
pie(table(Cars93$Type))
Cars93 <- read.csv("C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 3/Statistik/Cars93.csv")
View(Cars93)
pie(table(Cars93$Type))
shiny::
ui <- fluidPage(
)
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 3/Statistik/tuhoc')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 3/Statistik/Tu_hoc')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 3/Statistik/Tu_hoc')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 3/Statistik/Tu_hoc')
ui <- fluidPage(
sliderInput("Exponent", label = "Choose an exponent")
)
server <- function(input, output, session) {
}
ui <- fluidPage(
sliderInput("Exponent", label = "Choose an exponent", min = 1, max = 5, value = 2)
)
# tìm lũy thừa
prod(3:1)
prod(10:5)
choose(5,2)
dbinom(2,3,0.6)
rbinom(1000,20,0.2)
#chỉ đối tượng ngẫu nhiên
rbinom(100,20,0.2)
pbinom(7,10,0.7)
#nhị phân tích lũy, VD điều trị 10 bệnh nhân, tối thiểu 8 ng có kq tích
#cực là bn với 70% hiệu nghiệm
1- pbinom(7,10,0.7)
1- pbinom(7,10,0.7)
b <- rbinom(100,20,0.2)
table(b)
#chỉ đối tượng ngẫu nhiên. Chọn mẫu 100 lần, mỗi lần chọn 20 ng ngẫu nhiên
# với 20% mắc bệnh cao huyết áp
rbinom(1000,20,0.2)
hist(b, main="Number of hypertensive patients")
hist(b, main="Number of hypertensive patients")
hist(b, main="Number of hypertensive patients")
hist(b, main="Number of hypertensive patients")
dpois(2,1)
1- ppois(2,1)
height <- seg (130,200,1)
plot (height, dnorm(height, 156, 4.6))
height <- seg (130,200,1)
getwd()
dir()
search()
install.packages()
installed.packages()
installed.packages(MASS)
library(MASS)
library(MASS)
library(MASS)
search()
sort()
sort(MASS)
?sort
?sort
2**4
3^3
8^37
5^6
12%/%3
12/3
12%/%5
13%/%2
13%%4
19%%3
19%/%3
sqrt(5)
sqrt4
sqrt(7)
sqrt(500)
abs(10)
abs(14,3)
abs(14.3)
abs(56)
abs(56.7654)
?sort(abs)
?abs
x<-10
abs(x)
x<-12
b<-13
factorial(12)
12^12
factorial(4)
4!
abs(-23.56)
round(pi)
round(pi, 3.4)
round(pi, 10)
round(pi,5)
round(pi, 100)
floor(4.5)
ceiling(4.5)
log(exp(1))
log(3)
round(pi^2, 4)
round(pi^2, 8)
vektor1
vektor1<- c(12,4,-45,-67,8,500,4.6,34,-9,0.5)
vektor1<- c(12,4,-45,-67,8,500,4.6,34,-9,0.5)
vektor1
sort(vektor1)
rev(sort(vektor1))
sum(vektor1)
prod(vektor1)
vektor2<- c(65,34,-4, 8.9, -3.4,2,12,1)
vektor2<- c(65,34,-4, 8.9, -3.4,2,12,1, 3^4, -400)
vektorSumme <- vektor1 + vektor2
vektorSumme
vektor3<- seq(0,100,by=5)
vektor3
vektor4 <- c(vektor2, vektor3)
vektor4
length(vektor3)
length(vektor2)
length(vektor4)
getwd()
search()
help("sort")
5+4
knitr::opts_chunk$set(echo = TRUE)
stunden <- c(7, 55, 5, 8, 4, 10, 60, 7, 12, 5, 5, 10, 5, 5, 8, 10,
10, 7, 4, 6, 7, 5, 6, 10, 7, 3, 6, 6, 10,  9)
sum(stunden)
mean(stunden)
median(stunden)
hist(stunden)
hist(stunden, breaks = 5)
hist(stunden, main = "Histogram für Stunden",)
hist(stunden, main = "Histogram für Stunden", breaks = 10)
hist(stunden, main = "Histogram für Stunden", breaks = 5)
knitr::opts_chunk$set(echo = TRUE)
stunden <- c(7, 55, 5, 8, 4, 10, 60, 7, 12, 5, 5, 10, 5, 5, 8, 10,
10, 7, 4, 6, 7, 5, 6, 10, 7, 3, 6, 6, 10,  9)
hist(stunden, main = "Histogram für Stunden", breaks = 5, xlab= "Stunden", ylab = Häufigkeit)
hist(stunden, main = "Histogram für Stunden", breaks = 5, xlab= "Stunden", ylab = "Häufigkeit")
hist(stunden, main = "Histogram für Stunden", breaks = 5, xlab= "Stunden", ylab = "Häufigkeit", col = blue)
hist(stunden, main = "Histogram für Stunden", breaks = 5, xlab= "Stunden", ylab = "Häufigkeit", col = blue)
hist(stunden, main = "Histogram für Stunden", breaks = 5, xlab= "Stunden", ylab = "Häufigkeit")
hist(stunden, main = "Histogram für Stunden", breaks = 30, xlab= "Stunden", ylab = "Häufigkeit")
stunden <- c(7, 55, 5, 8, 4, 10, 60, 7, 12, 5, 5, 10, 5, 5, 8, 10,
10, 7, 4, 6, 7, 5, 6, 10, 7, 3, 6, 6, 10,  9)
stunden <- c(7, 55, 5, 8, 4, 10, 60, 7, 12, 5, 5, 10, 5, 5, 8, 10,
10, 7, 4, 6, 7, 5, 6, 10, 7, 3, 6, 6, 10,  9)
sortiert <- sort(stunden)
stunden <- c(7, 55, 5, 8, 4, 10, 60, 7, 12, 5, 5, 10, 5, 5, 8, 10,
10, 7, 4, 6, 7, 5, 6, 10, 7, 3, 6, 6, 10,  9)
sortiert <- sort(stunden)
n <- length(stunden)
stunden2 <- sortiert[1:(n-2)]
mean(stunden2)
knitr::opts_chunk$set(echo = TRUE)
# Pfad zur Datei anpassen
dax30 <- read.csv("dax30.csv")
knitr::opts_chunk$set(echo = TRUE)
# Pfad zur Datei anpassen
dax30 <- read.csv("dax30.csv")
# Pfad zur Datei anpassen
dax30 <- read.csv("dax30.csv")
# benutze alternativ den Dialog zum Öffnen einer Datei
# dax30 <- read.csv(file.choose())
dax30
knitr::opts_chunk$set(echo = TRUE)
bmw <- read.csv("C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Übung/bmw.csv", sep=";")
View(bmw)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
mean(Schuluss)
View(bmw)
View(bmw)
knitr::opts_chunk$set(echo = TRUE)
View(bmw)
View(bmw)
mean(bmw$Schluss)
33.88588
var(bmw$Schluss)
var(bmw$Schluss)
[1] 0.6045888
sd(bmw$Schluss)
library(knitr)
zulassungen <- read.csv("neuzulassungen.csv")
library(knitr)
zulassungen <- read.csv("neuzulassungen.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
zulassungen <- read.csv("neuzulassungen.csv")
kable(zulassungen)
Hersteller <- c("VW", "BMW", "Mercedes", "Audi", "Opel", "Ford", "Renault", "Skoda", "Hyundai", "Toyota")
Stueckzahl <- c(672921, 284494, 283006, 266582, 213627, 206128, 150740, 147197, 100875, 83834)
plot(Kum_rel_freg, Stueckzahl, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
Hersteller <- c("VW", "BMW", "Mercedes", "Audi", "Opel", "Ford", "Renault", "Skoda", "Hyundai", "Toyota")
Stueckzahl <- c(672921, 284494, 283006, 266582, 213627, 206128, 150740, 147197, 100875, 83834)
i <- 1:10
hi <- rep(1, 10)
fi <- 1/10
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
plot(Kum_rel_freg, Stueckzahl, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
lines(c(0,1), c(0, max(Stueckzahl)), col = "red", lty = 2)
plot(Kum_rel_freg, Stueckzahl, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
lines(c(0,1), c(0, max(Stueckzahl)), col = "red", lty = 5)
plot(Kum_rel_freg, Stueckzahl, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
lines(c(0,1), c(0, max(Stueckzahl)), col = "red", lty = 10)
plot(Kum_rel_freg, Stueckzahl, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
lines(c(0,1), c(0, max(Stueckzahl)), col = "red", lty = 1)
n <- length(bmw$Schluss)
n <- length(bmw$Schluss)
mean_bmw <- sum(bmw$Schluss)/n
mean_bmw
library(knitr)
zulassungen <- read.csv("neuzulassungen.csv")
kable(zulassungen)
i <- 1:10
hi <- rep(1, 10)
fi <- 1/10
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
plot(Kum_rel_freg, Stueckzahl, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
lines(c(0,1), c(0, max(Stueckzahl)), col = "red", lty = 1)
i <- 1:10
hi <- rep(1, 10)
fi <- 1/10
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
prop.table(hi)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
fi <- 1/10
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
prop.table(hi)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
fi <- 1/10
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
prop.table(hi)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
prop.table(hStar)
fi <- 1/10
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
prop.table(hi)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
prop.table(hStar)
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
prop.table(hi)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
prop.table(hStar)
fi_prop.table(hi)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
prop.table(hStar)
fi=prop.table(hi)
kum_rel_freg_vonfi <- cumsum(fi)
rel_freg_jedeHersteller <- Stueckzahl/sum(Stueckzahl)
prop.table(hi)
Kum_rel_freg <- cumsum(rel_freg_jedeHersteller)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
prop.table(hStar)
fi=prop.table(hi)
F = cumsum(fi)
fStar<- prop.table(hStar)
i <- 1:10
hi <- rep(1, 10)
x <- Stueckzahl
hStar <- x*hi
prop.table(hStar)
fi=prop.table(hi)
F = cumsum(fi)
fStar<- prop.table(hStar)
FStar <- cumsum(fStar)
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(Kum_rel_freg, x, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
lines(c(0,1), c(0, max(Stueckzahl)), col = "red", lty = 1)
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5)
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5, xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5, xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5, xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5, xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5, xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar0, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", lwd = 5, xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(F0, FStar0, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(FStar0, F0, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", xlim = c(0,1), ylim =c (0,1))
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(FStar0, F0, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", xlim = c(0,1), ylim =c (0,1))
abline(0,1)
F0 <- c(0,F)
FStar0 <- c(0, FStar)
plot(FStar0, F0, xlab = "Kumulative relative frequency", ylab="Stückzahl", type = "l", col="blue", xlim = c(0,1), ylim =c (0,1))
abline(0,1, col="red")
x <- c(42, 68, 110)
y <- c(58, 32, 90)
mean_x <- mean(x)
mean_y <- mean(y)
numerator <- sum((x - mean_x) * (y - mean_y))
denominator_x <- sqrt(sum((x - mean_x)^2))
denominator_y <- sqrt(sum((y - mean_y)^2))
correlation <- numerator / (denominator_x * denominator_y)
print(correlation)
# Erstellen Sie einen Datensatz
diet_data <- matrix(c(68, 42, 100, 49, 51, 100), nrow = 2, byrow = TRUE)
# Weisen Sie den Diätmitteln und Gewichtsveränderungen Namen zu
colnames(diet_data) <- c("Antwort 1", "Antwort 2", "Antwort 3")
rownames(diet_data) <- c("Abgenommen", "Zugenommen")
# Berechnen Sie den Pearson-Korrelationskoeffizienten
correlation <- cor(diet_data[1, ], diet_data[2, ])
# Zeigen Sie das Ergebnis an
print(correlation)
knitr::opts_chunk$set(echo = TRUE)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
packageVersion("htmltools")
devtools::install_version("htmltools", version = "0.5.4", dependencies = TRUE)
install.packages("devtools")
install.packages("devtools")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
install.packages("htmltools")
install.packages("htmltools")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='guudcw-gin-nguyen',
token='5A841B902D086813359780FE17894EDC',
secret='<SECRET>')
rsconnect::setAccountInfo(name='guudcw-gin-nguyen',
token='5A841B902D086813359780FE17894EDC',
secret='dOkFrFagGQPUKqTYh3+MiuWsbV5KJwJcOWt8v4eS')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
rsconnect::setAccountInfo(name='guudcw-gin-nguyen',
token='5A841B902D086813359780FE17894EDC',
secret='dOkFrFagGQPUKqTYh3+MiuWsbV5KJwJcOWt8v4eS')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/MeineErsteShinyApp')
git init
git remote add origin https://github.com/ginguyenn/Titanic.git
shiny::runApp('C:/Users/gingu/AppData/Local/Temp/efc16458-ace5-46f9-ac2a-3b1334288079_Covid_analyzer_Gruppe_M.zip.079')
runApp('C:/Users/gingu/AppData/Local/Temp/efc16458-ace5-46f9-ac2a-3b1334288079_Covid_analyzer_Gruppe_M.zip.079')
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
library(cli)
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
install.packages("cli")
install.packages("cli")
library(cli)
install.packages("cli")
install.packages("cli")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
install.packages("cli")
install.packages("cli")
installr::updateR()
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
install.packages("cli")
install.packages("cli")
install.packages("cli")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
install.packages("ggthemes")
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
install.packages("cli")
install.packages("cli")
install.packages("cli")
shiny::runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Sem 6/Statistik/Titanic')
library(shiny); runApp('C:/Users/gingu/OneDrive/Máy tính/Gin/HTW/Titanic/Titanic.R')
